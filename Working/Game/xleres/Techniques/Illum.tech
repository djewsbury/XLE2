
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

    ~~ "Silhouette" configuration just has the minimum support to get the correct geometry
    ~~ silhouette (plus alpha testing)

~Silhouette
    ~Inherit; shared.tech:Skinnable; shared.tech:VegetationSpawn
    ~Parameters
        ~Geometry
            GEO_HAS_COLOUR
            GEO_HAS_TEXCOORD
            GEO_HAS_NORMAL
        ~Material
            MAT_ALPHA_TEST
            RES_HAS_DiffuseTexture
            MAT_VCOLOR_IS_ANIM_PARAM

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

    ~~ "Illum" style techniques
    ~~      -- these are techniques that are used when drawing the object into the main scene and we're drawing
    ~~      the object in it's "main" visual look -- with all of the assigned material, texture & lighting properties

~Illum
    ~Inherit; Silhouette; shared.tech:CommonMaterial; shared.tech:System
    ~Parameters
        ~Geometry
            GEO_HAS_BITANGENT
            GEO_HAS_NORMAL
            GEO_HAS_TANGENT_FRAME
            GEO_HAS_PER_VERTEX_AO
        ~GlobalEnvironment
            CLASSIFY_NORMAL_MAP
            SKIP_MATERIAL_DIFFUSE=0

~Forward
    ~Inherit; Illum; shared.tech:System
    VertexShader=xleres/forward/illum.vsh:main
    PixelShader=xleres/forward/illum.psh:main

~Deferred
    ~Inherit; Illum; shared.tech:Deferred
    VertexShader=xleres/deferred/basic.vsh:main
    PixelShader=xleres/deferred/basic.psh:main

~DeferredFlex
    ~Inherit; Deferred
    VertexShader=xleres/deferred/basic.vsh:main
    PixelShader=xleres/deferred/flex.psh:main

~OrderIndependentTransparency
    ~Inherit; Illum; shared.tech:Forward
    VertexShader=xleres/forward/illum.vsh:main
    PixelShader=xleres/forward/transparency/illum.psh:main_oi

~StochasticTransparency
    ~Inherit; Illum; shared.tech:Forward
    ~Parameters
        ~Runtime
            STOCHASTIC_SAMPLE_COUNT=8
            STOCHASTIC_TRANS_PRIMITIVEID
            STOCHASTIC_TRANS_OPACITY
    VertexShader=xleres/forward/illum.vsh:main
    PixelShader=xleres/forward/transparency/illum.psh:main_stochastic

~DepthWeightedTransparency
    ~Inherit; Illum; shared.tech:Forward
    VertexShader=xleres/forward/illum.vsh:main
    PixelShader=xleres/forward/transparency/depthweighted.sh:main_depth_weighted_oi

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

    ~~ "Silhouette" related rendering
    ~~      for example, for rendering to the shadow depths texture, or doing a pre-depth pass.

~DepthOnly
    ~Inherit; Silhouette
    ~Parameters
        ~Material
            MAT_ALPHA_TEST_PREDEPTH
        ~Runtime
            STOCHASTIC_TRANS
            STOCHASTIC_TRANS_PRIMITIVEID
            STOCHASTIC_TRANS_OPACITY
    VertexShader=xleres/forward/illum.vsh:main
    PixelShader=xleres/forward/depthonly.psh:main

~ShadowGen
    ~Inherit; Silhouette
    ~Parameters
        ~Material
            MAT_ALPHA_DITHER_SHADOWS
        ~Runtime
            FRUSTUM_FILTER=63
            SHADOW_CASCADE_MODE
            OUTPUT_SHADOW_PROJECTION_COUNT=6
            SHADOW_ENABLE_NEAR_CASCADE
    VertexShader=xleres/shadowgen/depthonly.vsh:main
    GeometryShader=xleres/shadowgen/depthonly.gsh:main
    PixelShader=xleres/shadowgen/depthonly.psh:main

~RayTest
    ~Inherit; Silhouette
    ~Parameters
        ~Geometry
            OUTPUT_WORLD_POSITION=1
        ~Runtime
            INTERSECTION_TEST
    VertexShader=xleres/forward/illum.vsh:main
    GeometryShader=xleres/forward/raytest.gsh:triangles
    PixelShader=null

~WriteTriangleIndex
    ~Inherit; Silhouette
    ~Parameters
        ~Geometry
            OUTPUT_WORLD_POSITION=0
        ~Runtime
            SHADOW_CASCADE_MODE
    VertexShader=xleres/shadowgen/rtwritetiles.sh:vs_writetris
    GeometryShader=xleres/shadowgen/rtwritetiles.sh:gs_writetris
    PixelShader=null

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

~VisNormals
    ~Parameters
        ~Geometry
            OUTPUT_WORLD_POSITION=1
            OUTPUT_NORMAL=1
            OUTPUT_TANGENT_FRAME=1
            GEO_HAS_TANGENT_FRAME
            GEO_HAS_BITANGENT
            GEO_HAS_NORMAL
    VertexShader=xleres/forward/illum.vsh:main
    GeometryShader=xleres/vis/geowires.gsh:NormalsAndTangents
    PixelShader=xleres/basic.psh:PC

~VisWireframe
    ~Parameters
        ~Geometry
            GEO_HAS_TEXCOORD
            OUTPUT_WORLD_POSITION=1
    VertexShader=xleres/forward/illum.vsh:main
    GeometryShader=xleres/solidwireframe.gsh:main
    PixelShader=xleres/solidwireframe.psh:main

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

~Technique
    Forward = Forward
    Deferred = Deferred
    Deferred, has(Signal_PBRSample) = DeferredFlex
    OrderIndependentTransparency = OrderIndependentTransparency
    StochasticTransparency = StochasticTransparency
    DepthWeightedTransparency = DepthWeightedTransparency
    DepthOnly = DepthOnly
    ShadowGen = ShadowGen
    RayTest = RayTest
    WriteTriangleIndex = WriteTriangleIndex
    VisNormals = VisNormals
    VisWireframe = VisWireframe

    CBLayout = <:(
        float3  MaterialDiffuse = {1.f,1.f,1.f}c;
        float   Opacity = 1;
        float3  MaterialSpecular = {1.f,1.f,1.f}c;
        float   AlphaThreshold = .33f;
        float   RoughnessMin = 0.5f;
        float   RoughnessMax = 1.f;
        float   SpecularMin = 0.1f;
        float   SpecularMax = 1.f;
        float   MetalMin = 0.f;
        float   MetalMax = 1.f;
    ):>
